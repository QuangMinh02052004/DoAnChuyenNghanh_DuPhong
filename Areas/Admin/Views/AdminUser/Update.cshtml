@using Bloomie.Data
@model ApplicationUser
@{
    ViewData["Title"] = "Cập nhật người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
}

<div class="container-fluid mt-2 p-0">
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <!-- Header and Navigation -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold text-dark">
                    <i class="fas fa-user-edit text-primary me-2"></i> Chỉnh sửa Người dùng
                </h2>
                <a asp-action="Index" asp-controller="AdminUser" asp-route-pageNumber="@currentPage" class="btn btn-secondary shadow-sm" data-bs-toggle="tooltip" data-bs-title="Quay lại">
                    <i class="fas fa-arrow-left me-2"></i> Quay lại
                </a>
            </div>

            <!-- Validation Errors -->
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }

            <!-- Form -->
            <form asp-action="Update" asp-controller="AdminUser" method="post" novalidate>
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="Token" />
                <div class="form-group mb-3">
                    <label asp-for="Id" class="form-label">ID Người dùng</label>
                    <input asp-for="Id" class="form-control" readonly />
                </div>
                <div class="form-group mb-3">
                    <label asp-for="UserName" class="form-label">Tên người dùng</label>
                    <input asp-for="UserName" class="form-control" placeholder="Nhập tên người dùng" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Email" class="form-label">Email</label>
                    <input asp-for="Email" class="form-control" placeholder="Nhập địa chỉ email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="FullName" class="form-label">Họ và tên</label>
                    <input asp-for="FullName" class="form-control" placeholder="Nhập họ và tên" />
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="PhoneNumber" class="form-label">Số điện thoại</label>
                    <input asp-for="PhoneNumber" class="form-control" placeholder="Nhập số điện thoại" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label class="form-label">Mật khẩu mới (để trống nếu không đổi)</label>
                    <input type="password" name="password" class="form-control" placeholder="Nhập mật khẩu mới" />
                    <span class="text-danger">@ViewData.ModelState["password"]?.Errors?.FirstOrDefault()?.ErrorMessage</span>
                </div>
                <div class="form-group mb-4">
                    <label class="form-label">Vai trò</label>
                    <select name="selectedRole" class="form-control" required>
                        <option value="">Chọn vai trò</option>
                        @foreach (var role in ViewBag.AllRoles)
                        {
                            if (ViewBag.CurrentRoles?.Contains(role.Text) == true)
                            {
                                <option value="@role.Value" selected>@role.Text</option>
                            }
                            else
                            {
                                <option value="@role.Value">@role.Text</option>
                            }
                        }
                    </select>
                    <span class="text-danger">@ViewData.ModelState["selectedRole"]?.Errors?.FirstOrDefault()?.ErrorMessage</span>
                </div>
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary shadow-sm me-2" data-bs-toggle="tooltip" data-bs-title="Cập nhật người dùng">
                        <i class="fas fa-save me-2"></i> Cập nhật
                    </button>
                    <a asp-action="Index" asp-controller="AdminUser" asp-route-pageNumber="@currentPage" class="btn btn-secondary shadow-sm" data-bs-toggle="tooltip" data-bs-title="Hủy">
                        <i class="fas fa-times me-2"></i> Hủy
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #60a5fa;
        --text-dark: #1e293b;
        --text-light: #ffffff;
        --background-light: #f8fafc;
    }

    h2 {
        font-family: 'Inter', sans-serif;
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .container-fluid {
        padding-left: 0 !important;
        padding-right: 0 !important;
        margin: 0 !important;
        width: 100% !important;
    }

    .card {
        width: 100% !important;
        max-width: none !important;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-body {
        padding: 20px;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        font-weight: 500;
        color: var(--text-dark);
        margin-bottom: 0.5rem;
        display: block;
    }

    .form-control {
        border-radius: 6px;
        border: 1px solid #d1d5db;
        padding: 8px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            outline: none;
        }

        .form-control[readonly] {
            background-color: #f3f4f6;
            cursor: not-allowed;
        }

        .form-control::placeholder {
            color: #9ca3af;
            opacity: 1;
        }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-primary:hover {
            background-color: #1d4ed8;
            border-color: #1d4ed8;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-secondary {
        background-color: #6b7280;
        border-color: #6b7280;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-secondary:hover {
            background-color: #4b5563;
            border-color: #4b5563;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .alert-danger {
        border-radius: 6px;
        margin-bottom: 1.5rem;
        font-size: 0.9rem;
    }

    .text-danger {
        font-size: 0.85rem;
        margin-top: 0.25rem;
        display: block;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize Bootstrap tooltips
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
    });
</script>